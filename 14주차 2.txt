=========================================================
STL.cpp: 2024-06-06 목요일 오후 1:48:44
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		6월 6일 목요일		(14주 2)
// 
// 6월 6일 목요일 - 강의하겠습니다.
// 6월 13일 목요일 (15주 2일) - 기말시험
// 
// C++20 Concept / Range
// 
// Concept
// - 프로그래머의 의도를 보다 명확하게 나타낼 수 있는 언어차원의 지원
// 1. 이른 단계에서 프로그램의 오류를 검출하고 더 알기쉬운 오류메시지를 출력
// 2. 맞는 컨셉의 함수를 소스코드 확장할 수 있는 데 사용
// 
// Range
//-------------------------------------------------------------------
#include <iostream>
#include <algorithm>
#include <ranges>
#include <vector>
#include <numeric>
#include <random>
#include <print>
#include "save.h"
#include "String.h"

extern bool 관찰;

std::default_random_engine dre;

//-------------
int main(void)
//-------------
{
	std::vector<int> v(100);
	std::ranges::iota(v, 1);
	std::ranges::shuffle(v, dre);

	for (int num : v)
		std::print("{:4}", num);
	std::cout << '\n';

	save("STL.cpp");
}

=========================================================
STL.cpp: 2024-06-06 목요일 오후 1:54:49
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		6월 6일 목요일		(14주 2)
// 
// 6월 6일 목요일 - 강의하겠습니다.
// 6월 13일 목요일 (15주 2일) - 기말시험
// 
// C++20 Concept / Range
// 
// Concept
// - 프로그래머의 의도를 보다 명확하게 나타낼 수 있는 언어차원의 지원
// 1. 이른 단계에서 프로그램의 오류를 검출하고 더 알기쉬운 오류메시지를 출력
// 2. 맞는 컨셉의 함수를 소스코드 확장할 수 있는 데 사용
// 
// Range
//-------------------------------------------------------------------
#include <iostream>
#include <algorithm>
#include <ranges>
#include <vector>
#include <numeric>
#include <random>
#include <print>
#include "save.h"
#include "String.h"

extern bool 관찰;

std::default_random_engine dre;

//-------------
int main(void)
//-------------
{
	std::vector<int> v(100);
	std::ranges::iota(v, 1);
	std::ranges::shuffle(v, dre);

	// 개수를 갖는 범위
	for (int num : std::views::counted(v.begin(), 20))
		std::print("{:4}", num);
	std::cout << '\n';

	save("STL.cpp");
}

=========================================================
STL.cpp: 2024-06-06 목요일 오후 1:58:28
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		6월 6일 목요일		(14주 2)
// 
// 6월 6일 목요일 - 강의하겠습니다.
// 6월 13일 목요일 (15주 2일) - 기말시험
// 
// C++20 Concept / Range
// 
// Concept
// - 프로그래머의 의도를 보다 명확하게 나타낼 수 있는 언어차원의 지원
// 1. 이른 단계에서 프로그램의 오류를 검출하고 더 알기쉬운 오류메시지를 출력
// 2. 맞는 컨셉의 함수를 소스코드 확장할 수 있는 데 사용
// 
// Range
//-------------------------------------------------------------------
#include <iostream>
#include <algorithm>
#include <ranges>
#include <vector>
#include <numeric>
#include <random>
#include <print>
#include "save.h"
#include "String.h"

extern bool 관찰;

std::default_random_engine dre;

//-------------
int main(void)
//-------------
{
	std::vector<int> v(100);
	std::ranges::iota(v, 1);
	std::ranges::shuffle(v, dre);

	for (int num : v)
		std::print("{:4}", num);
	std::cout << '\n';

	// 조건에 맞는 범위 - 홀수만 출력
	for (int num : std::views::take_while(v, [](int n){ return n&1;}))
		std::print("{:4}", num);
	std::cout << '\n';

	save("STL.cpp");
}

=========================================================
STL.cpp: 2024-06-06 목요일 오후 1:59:49
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		6월 6일 목요일		(14주 2)
// 
// 6월 6일 목요일 - 강의하겠습니다.
// 6월 13일 목요일 (15주 2일) - 기말시험
// 
// C++20 Concept / Range
// 
// Concept
// - 프로그래머의 의도를 보다 명확하게 나타낼 수 있는 언어차원의 지원
// 1. 이른 단계에서 프로그램의 오류를 검출하고 더 알기쉬운 오류메시지를 출력
// 2. 맞는 컨셉의 함수를 소스코드 확장할 수 있는 데 사용
// 
// Range
//-------------------------------------------------------------------
#include <iostream>
#include <algorithm>
#include <ranges>
#include <vector>
#include <numeric>
#include <random>
#include <print>
#include "save.h"
#include "String.h"

extern bool 관찰;

std::default_random_engine dre;

//-------------
int main(void)
//-------------
{
	std::vector<int> v(100);
	std::ranges::iota(v, 1);
	std::ranges::shuffle(v, dre);

	for (int num : v)
		std::print("{:4}", num);
	std::cout << '\n' << '\n';

	// 조건에 맞는 범위 - 홀수만 출력
	for (int num : std::views::filter(v, [](int n){ return n&1;}))
		std::print("{:4}", num);
	std::cout << '\n';

	save("STL.cpp");
}

=========================================================
STL.cpp: 2024-06-06 목요일 오후 2:02:14
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		6월 6일 목요일		(14주 2)
// 
// 6월 6일 목요일 - 강의하겠습니다.
// 6월 13일 목요일 (15주 2일) - 기말시험
// 
// C++20 Concept / Range
// 
// Concept
// - 프로그래머의 의도를 보다 명확하게 나타낼 수 있는 언어차원의 지원
// 1. 이른 단계에서 프로그램의 오류를 검출하고 더 알기쉬운 오류메시지를 출력
// 2. 맞는 컨셉의 함수를 소스코드 확장할 수 있는 데 사용
// 
// Range
//-------------------------------------------------------------------
#include <iostream>
#include <algorithm>
#include <ranges>
#include <vector>
#include <numeric>
#include <random>
#include <print>
#include "save.h"
#include "String.h"

extern bool 관찰;

std::default_random_engine dre;

//-------------
int main(void)
//-------------
{
	save("STL.cpp");

	std::vector<int> v(100);
	std::ranges::iota(v, 1);
	std::ranges::shuffle(v, dre);

	// 무한 시퀀스도 범위이다.
	for (int num : std::views::iota(1))
		std::print("{}", num);
	std::cout << '\n';
}

=========================================================
STL.cpp: 2024-06-06 목요일 오후 2:04:35
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		6월 6일 목요일		(14주 2)
// 
// 6월 6일 목요일 - 강의하겠습니다.
// 6월 13일 목요일 (15주 2일) - 기말시험
// 
// C++20 Concept / Range
// 
// Concept
// - 프로그래머의 의도를 보다 명확하게 나타낼 수 있는 언어차원의 지원
// 1. 이른 단계에서 프로그램의 오류를 검출하고 더 알기쉬운 오류메시지를 출력
// 2. 맞는 컨셉의 함수를 소스코드 확장할 수 있는 데 사용
// 
// Range
//-------------------------------------------------------------------
#include <iostream>
#include <algorithm>
#include <ranges>
#include <vector>
#include <numeric>
#include <random>
#include <print>
#include "save.h"
#include "String.h"

extern bool 관찰;

std::default_random_engine dre;

//-------------
int main(void)
//-------------
{
	save("STL.cpp");

	std::vector<int> v(100);
	std::ranges::iota(v, 1);
	std::ranges::shuffle(v, dre);

	// 무한 시퀀스도 범위이다.
	for (int num : std::views::iota(1) | std::views::filter([](int n) {return n & 1;}))
		std::print("{}", num);
	std::cout << '\n';
}

=========================================================
STL.cpp: 2024-06-06 목요일 오후 2:13:33
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		6월 6일 목요일		(14주 2)
// 
// 6월 6일 목요일 - 강의하겠습니다.
// 6월 13일 목요일 (15주 2일) - 기말시험
// 
// C++20 Concept / Range
// 
// Concept
// - 프로그래머의 의도를 보다 명확하게 나타낼 수 있는 언어차원의 지원
// 1. 이른 단계에서 프로그램의 오류를 검출하고 더 알기쉬운 오류메시지를 출력
// 2. 맞는 컨셉의 함수를 소스코드 확장할 수 있는 데 사용
// 
// Range
//-------------------------------------------------------------------
#include <iostream>
#include <algorithm>
#include <ranges>
#include <vector>
#include <numeric>
#include <random>
#include <print>
#include "save.h"
#include "String.h"

extern bool 관찰;

std::default_random_engine dre;

//-------------
int main(void)
//-------------
{
	std::vector<int> v(100);
	std::ranges::iota(v, 1);
	std::ranges::shuffle(v, dre);

	for (int num : std::views::all(v))
		std::print("{:4}", num);
	std::cout << '\n';

	save("STL.cpp");
}

=========================================================
STL.cpp: 2024-06-06 목요일 오후 2:15:54
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		6월 6일 목요일		(14주 2)
// 
// 6월 6일 목요일 - 강의하겠습니다.
// 6월 13일 목요일 (15주 2일) - 기말시험
// 
// C++20 Concept / Range
// 
// Concept
// - 프로그래머의 의도를 보다 명확하게 나타낼 수 있는 언어차원의 지원
// 1. 이른 단계에서 프로그램의 오류를 검출하고 더 알기쉬운 오류메시지를 출력
// 2. 맞는 컨셉의 함수를 소스코드 확장할 수 있는 데 사용
// 
// Range
//-------------------------------------------------------------------
#include <iostream>
#include <algorithm>
#include <ranges>
#include <vector>
#include <numeric>
#include <random>
#include <print>
#include "save.h"
#include "String.h"

extern bool 관찰;

std::default_random_engine dre;

//-------------
int main(void)
//-------------
{
	std::vector<int> v(100);
	std::ranges::iota(v, 1);
	std::ranges::shuffle(v, dre);

	for (int num : std::views::transform(v, [](int n) {return -n;}))
		std::print("{:4}", num);
	std::cout << '\n';

	std::cout << '\n' << '\n';
	for (int num : v)
		std::print("{:4}", num);
	std::cout << '\n';

	save("STL.cpp");
}

=========================================================
STL.cpp: 2024-06-06 목요일 오후 2:20:32
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		6월 6일 목요일		(14주 2)
// 
// 6월 6일 목요일 - 강의하겠습니다.
// 6월 13일 목요일 (15주 2일) - 기말시험
// 
// C++20 Concept / Range
// 
// Concept
// - 프로그래머의 의도를 보다 명확하게 나타낼 수 있는 언어차원의 지원
// 1. 이른 단계에서 프로그램의 오류를 검출하고 더 알기쉬운 오류메시지를 출력
// 2. 맞는 컨셉의 함수를 소스코드 확장할 수 있는 데 사용
// 
// Range
//-------------------------------------------------------------------
#include <iostream>
#include <algorithm>
#include <ranges>
#include <vector>
#include <numeric>
#include <random>
#include <print>
#include "save.h"
#include "String.h"

extern bool 관찰;

std::default_random_engine dre;

//-------------
int main(void)
//-------------
{
	std::vector<int> v(100);
	std::ranges::iota(v, 1);
	std::ranges::shuffle(v, dre);

	for (int num : std::ranges::ref_view(v))
		std::print("{:4}", num);
	std::cout << '\n';

	std::cout << '\n' << '\n';
	for (int num : v)
		std::print("{:4}", num);
	std::cout << '\n';

	save("STL.cpp");
}

=========================================================
STL.cpp: 2024-06-06 목요일 오후 2:25:01
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		6월 6일 목요일		(14주 2)
// 
// 6월 6일 목요일 - 강의하겠습니다.
// 6월 13일 목요일 (15주 2일) - 기말시험
// 
// C++20 Concept / Range
// 
// Concept
// - 프로그래머의 의도를 보다 명확하게 나타낼 수 있는 언어차원의 지원
// 1. 이른 단계에서 프로그램의 오류를 검출하고 더 알기쉬운 오류메시지를 출력
// 2. 맞는 컨셉의 함수를 소스코드 확장할 수 있는 데 사용
// 
// Range
//-------------------------------------------------------------------
#include <iostream>
#include <algorithm>
#include <ranges>
#include <vector>
#include <numeric>
#include <random>
#include <print>
#include "save.h"
#include "String.h"

extern bool 관찰;

std::default_random_engine dre;

//-------------
int main(void)
//-------------
{
	std::vector<int> v(100);
	std::ranges::iota(v, 1);
	std::ranges::shuffle(v, dre);

	// 정렬
	std::ranges::sort(v);

	for (int num : v)
		std::print("{:4}", num);
	std::cout << '\n';

	save("STL.cpp");
}

=========================================================
STL.cpp: 2024-06-06 목요일 오후 2:25:30
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		6월 6일 목요일		(14주 2)
// 
// 6월 6일 목요일 - 강의하겠습니다.
// 6월 13일 목요일 (15주 2일) - 기말시험
// 
// C++20 Concept / Range
// 
// Concept
// - 프로그래머의 의도를 보다 명확하게 나타낼 수 있는 언어차원의 지원
// 1. 이른 단계에서 프로그램의 오류를 검출하고 더 알기쉬운 오류메시지를 출력
// 2. 맞는 컨셉의 함수를 소스코드 확장할 수 있는 데 사용
// 
// Range
//-------------------------------------------------------------------
#include <iostream>
#include <algorithm>
#include <ranges>
#include <vector>
#include <numeric>
#include <random>
#include <print>
#include "save.h"
#include "String.h"

extern bool 관찰;

std::default_random_engine dre;

//-------------
int main(void)
//-------------
{
	std::vector<int> v(100);
	std::ranges::iota(v, 1);
	std::ranges::shuffle(v, dre);

	// 정렬
	std::ranges::sort(v.begin(), v.begin()+20);

	for (int num : v)
		std::print("{:4}", num);
	std::cout << '\n';

	save("STL.cpp");
}

=========================================================
STL.cpp: 2024-06-06 목요일 오후 2:27:10
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		6월 6일 목요일		(14주 2)
// 
// 6월 6일 목요일 - 강의하겠습니다.
// 6월 13일 목요일 (15주 2일) - 기말시험
// 
// C++20 Concept / Range
// 
// Concept
// - 프로그래머의 의도를 보다 명확하게 나타낼 수 있는 언어차원의 지원
// 1. 이른 단계에서 프로그램의 오류를 검출하고 더 알기쉬운 오류메시지를 출력
// 2. 맞는 컨셉의 함수를 소스코드 확장할 수 있는 데 사용
// 
// Range
//-------------------------------------------------------------------
#include <iostream>
#include <algorithm>
#include <ranges>
#include <vector>
#include <numeric>
#include <random>
#include <print>
#include "save.h"
#include "String.h"

extern bool 관찰;

std::default_random_engine dre;

//-------------
int main(void)
//-------------
{
	std::vector<int> v(100);
	std::ranges::iota(v, 1);
	std::ranges::shuffle(v, dre);

	// 정렬
	std::ranges::sort(std::views::counted(v.begin(), 20));

	for (int num : v)
		std::print("{:4}", num);
	std::cout << '\n';

	save("STL.cpp");
}

=========================================================
STL.cpp: 2024-06-06 목요일 오후 2:27:27
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		6월 6일 목요일		(14주 2)
// 
// 6월 6일 목요일 - 강의하겠습니다.
// 6월 13일 목요일 (15주 2일) - 기말시험
// 
// C++20 Concept / Range
// 
// Concept
// - 프로그래머의 의도를 보다 명확하게 나타낼 수 있는 언어차원의 지원
// 1. 이른 단계에서 프로그램의 오류를 검출하고 더 알기쉬운 오류메시지를 출력
// 2. 맞는 컨셉의 함수를 소스코드 확장할 수 있는 데 사용
// 
// Range
//-------------------------------------------------------------------
#include <iostream>
#include <algorithm>
#include <ranges>
#include <vector>
#include <numeric>
#include <random>
#include <print>
#include "save.h"
#include "String.h"

extern bool 관찰;

std::default_random_engine dre;

//-------------
int main(void)
//-------------
{
	std::vector<int> v(100);
	std::ranges::iota(v, 1);
	std::ranges::shuffle(v, dre);

	// 정렬
	std::ranges::sort(std::views::take(v, 20));

	for (int num : v)
		std::print("{:4}", num);
	std::cout << '\n';

	save("STL.cpp");
}

=========================================================
STL.cpp: 2024-06-06 목요일 오후 2:44:55
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		6월 6일 목요일		(14주 2)
// 
// 6월 6일 목요일 - 강의하겠습니다.
// 6월 13일 목요일 (15주 2일) - 기말시험
// 
// C++20 Concept / Range
// 
// Concept
// - 프로그래머의 의도를 보다 명확하게 나타낼 수 있는 언어차원의 지원
// 1. 이른 단계에서 프로그램의 오류를 검출하고 더 알기쉬운 오류메시지를 출력
// 2. 맞는 컨셉의 함수를 소스코드 확장할 수 있는 데 사용
// 
// Range - 의미가 확장되었다.
//-------------------------------------------------------------------
#include <iostream>
#include <vector>
#include <random>
#include <print>
#include "save.h"
#include "String.h"

extern bool 관찰;

std::default_random_engine dre;
std::uniform_int_distribution uid{ 1, 100 };
std::uniform_int_distribution<int> uidChar{ 'A', 'Z' };

struct Dog {
	int n{ uid(dre) };
	char c = uidChar(dre);
};

//-------------
int main(void)
//-------------
{
	std::vector<Dog> dogs(100);

	for (auto [숫자, 글자] : dogs)
		std::cout << '\t' << 숫자 << " - " << 글자 << '\n';

	save("STL.cpp");
}

=========================================================
STL.cpp: 2024-06-06 목요일 오후 2:50:22
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		6월 6일 목요일		(14주 2)
// 
// 6월 6일 목요일 - 강의하겠습니다.
// 6월 13일 목요일 (15주 2일) - 기말시험
// 
// C++20 Concept / Range
// 
// Concept
// - 프로그래머의 의도를 보다 명확하게 나타낼 수 있는 언어차원의 지원
// 1. 이른 단계에서 프로그램의 오류를 검출하고 더 알기쉬운 오류메시지를 출력
// 2. 맞는 컨셉의 함수를 소스코드 확장할 수 있는 데 사용
// 
// Range - 의미가 확장되었다.
//-------------------------------------------------------------------
#include <iostream>
#include <ranges>
#include <vector>
#include <random>
#include <print>
#include "save.h"
#include "String.h"

extern bool 관찰;

std::default_random_engine dre;
std::uniform_int_distribution uid{ 1, 100 };
std::uniform_int_distribution<int> uidChar{ 'A', 'Z' };

struct Dog {
	int n{ uid(dre) };
	char c = uidChar(dre);
};

//-------------
int main(void)
//-------------
{
	std::vector<Dog> dogs(100);

	// 두번째 인자 {} -> less<T>
	std::ranges::sort(dogs, {}, &Dog::c);

	for (auto [숫자, 글자] : dogs)
		std::cout << '\t' << 숫자 << " - " << 글자 << '\n';

	save("STL.cpp");
}

=========================================================
STL.cpp: 2024-06-06 목요일 오후 2:52:10
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		6월 6일 목요일		(14주 2)
// 
// 6월 6일 목요일 - 강의하겠습니다.
// 6월 13일 목요일 (15주 2일) - 기말시험
// 
// C++20 Concept / Range
// 
// Concept
// - 프로그래머의 의도를 보다 명확하게 나타낼 수 있는 언어차원의 지원
// 1. 이른 단계에서 프로그램의 오류를 검출하고 더 알기쉬운 오류메시지를 출력
// 2. 맞는 컨셉의 함수를 소스코드 확장할 수 있는 데 사용
// 
// Range - 의미가 확장되었다.
//-------------------------------------------------------------------
#include <iostream>
#include <ranges>
#include <vector>
#include <random>
#include <print>
#include "save.h"
#include "String.h"

extern bool 관찰;

std::default_random_engine dre;
std::uniform_int_distribution uid{ 1, 100 };
std::uniform_int_distribution<int> uidChar{ 'A', 'Z' };

struct Dog {
	int n{ uid(dre) };
	char c = uidChar(dre);
};

//-------------
int main(void)
//-------------
{
	std::vector<Dog> dogs(100);

	// 두번째 인자 {} -> less<T>
	std::ranges::sort(dogs, [](char a, char b) {
		return a > b;
		}, &Dog::c);

	for (auto [숫자, 글자] : dogs)
		std::cout << '\t' << 숫자 << " - " << 글자 << '\n';

	save("STL.cpp");
}

=========================================================
STL.cpp: 2024-06-06 목요일 오후 2:53:45
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		6월 6일 목요일		(14주 2)
// 
// 6월 6일 목요일 - 강의하겠습니다.
// 6월 13일 목요일 (15주 2일) - 기말시험
// 
// C++20 Concept / Range
// 
// Concept
// - 프로그래머의 의도를 보다 명확하게 나타낼 수 있는 언어차원의 지원
// 1. 이른 단계에서 프로그램의 오류를 검출하고 더 알기쉬운 오류메시지를 출력
// 2. 맞는 컨셉의 함수를 소스코드 확장할 수 있는 데 사용
// 
// Range - 의미가 확장되었다.
//-------------------------------------------------------------------
#include <iostream>
#include <ranges>
#include <vector>
#include <random>
#include <print>
#include "save.h"
#include "String.h"

extern bool 관찰;

std::default_random_engine dre;
std::uniform_int_distribution uid{ 1, 100 };
std::uniform_int_distribution<int> uidChar{ 'A', 'Z' };

struct Dog {
	int n{ uid(dre) };
	char c = uidChar(dre);
};

//-------------
int main(void)
//-------------
{
	std::vector<Dog> dogs(100);

	// 두번째 인자 {} -> less<T>
	std::ranges::sort(dogs, std::greater<char>{}, & Dog::c);

	for (auto [숫자, 글자] : dogs)
		std::cout << '\t' << 숫자 << " - " << 글자 << '\n';

	save("STL.cpp");
}

=========================================================
STL.cpp: 2024-06-06 목요일 오후 3:01:40
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		6월 6일 목요일		(14주 2)
// 
// 6월 6일 목요일 - 강의하겠습니다.
// 6월 13일 목요일 (15주 2일) - 기말시험
// 
// C++20 Concept / Range
// 
// for/accumulate/reduce
//-------------------------------------------------------------------
#include <iostream>
#include <algorithm>
#include <array>
#include <random>
#include <chrono>
#include "save.h"
#include "String.h"

std::default_random_engine dre;
std::uniform_int_distribution uid;

std::array<int, 2'5000'0000> a;

//-------------
int main(void)
//-------------
{
	for (int& num : a)
		num = uid(dre);

	// 합산
	long long sum{};

	auto b = std::chrono::high_resolution_clock::now();
	for (int i = 0; i < a.size(); ++i)
		sum += a[i];
	auto d = std::chrono::high_resolution_clock::now() - b;
	std::cout<< "걸린 시간 - " << std::chrono::duration_cast<std::chrono::milliseconds>(d) << '\n';
	std::cout << "합계 - " << sum << '\n';

	save("STL.cpp");
}

=========================================================
STL.cpp: 2024-06-06 목요일 오후 3:04:22
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		6월 6일 목요일		(14주 2)
// 
// 6월 6일 목요일 - 강의하겠습니다.
// 6월 13일 목요일 (15주 2일) - 기말시험
// 
// C++20 Concept / Range
// 
// for/accumulate/reduce
//-------------------------------------------------------------------
#include <iostream>
#include <algorithm>
#include <array>
#include <random>
#include <chrono>
#include <numeric>
#include "save.h"
#include "String.h"

std::default_random_engine dre;
std::uniform_int_distribution uid;

std::array<int, 2'5000'0000> a;

// for - loop
// 걸린 시간 - 84ms
// 합계 - 268416090773281637

//-------------
int main(void)
//-------------
{
	for (int& num : a)
		num = uid(dre);

	// 합산
	long long sum{};

	auto b = std::chrono::high_resolution_clock::now();
	sum = std::accumulate(a.begin(), a.end(), 0LL);
	auto d = std::chrono::high_resolution_clock::now() - b;
	std::cout<< "걸린 시간 - " << std::chrono::duration_cast<std::chrono::milliseconds>(d) << '\n';
	std::cout << "합계 - " << sum << '\n';

	save("STL.cpp");
}

=========================================================
STL.cpp: 2024-06-06 목요일 오후 3:09:39
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		6월 6일 목요일		(14주 2)
// 
// 6월 6일 목요일 - 강의하겠습니다.
// 6월 13일 목요일 (15주 2일) - 기말시험
// 
// C++20 Concept / Range
// 
// for/accumulate/reduce
//-------------------------------------------------------------------
#include <iostream>
#include <algorithm>
#include <array>
#include <random>
#include <chrono>
#include <numeric>
#include <execution>
#include "save.h"
#include "String.h"

std::default_random_engine dre;
std::uniform_int_distribution uid;

std::array<int, 2'5000'0000> a;

// for - loop
// 걸린 시간 - 84ms
// 합계 - 268416090773281637

// accumulate
// 걸린 시간 - 80ms
// 합계 - 268416090773281637

//-------------
int main(void)
//-------------
{
	for (int& num : a)
		num = uid(dre);

	// 합산
	long long sum{};

	auto b = std::chrono::high_resolution_clock::now();
	sum = std::reduce(std::execution::par, a.begin(), a.end(), 0LL);
	auto d = std::chrono::high_resolution_clock::now() - b;
	std::cout << "걸린 시간 - " << std::chrono::duration_cast<std::chrono::milliseconds>(d) << '\n';
	std::cout << "합계 - " << sum << '\n';

	save("STL.cpp");
}

=========================================================
STL.cpp: 2024-06-06 목요일 오후 3:11:05
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		6월 6일 목요일		(14주 2)
// 
// 6월 6일 목요일 - 강의하겠습니다.
// 6월 13일 목요일 (15주 2일) - 기말시험
// 
// C++20 Concept / Range
// 
// for/accumulate/reduce
//-------------------------------------------------------------------
#include <iostream>
#include <algorithm>
#include <array>
#include <random>
#include <chrono>
#include <numeric>
#include <execution>
#include "save.h"
#include "String.h"

std::default_random_engine dre;
std::uniform_int_distribution uid;

std::array<int, 2'5000'0000> a;

// for - loop
// 걸린 시간 - 84ms
// 합계 - 268416090773281637

// 알고리즘 - accumulate
// 걸린 시간 - 80ms
// 합계 - 268416090773281637

// 알고리즘 - reduce(execution::par)
// 걸린 시간 - 35ms
// 합계 - 268416090773281637

//-------------
int main(void)
//-------------
{
	for (int& num : a)
		num = uid(dre);

	// 합산
	long long sum{};

	auto b = std::chrono::high_resolution_clock::now();
	sum = std::reduce(std::execution::par, a.begin(), a.end(), 0LL);
	auto d = std::chrono::high_resolution_clock::now() - b;
	std::cout << "걸린 시간 - " << std::chrono::duration_cast<std::chrono::milliseconds>(d) << '\n';
	std::cout << "합계 - " << sum << '\n';

	save("STL.cpp");
}