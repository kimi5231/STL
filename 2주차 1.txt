=========================================================
STL.cpp: 2024-03-12 화요일 오후 2:03:12
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		3월 12일 화요일		(2주 1)
// 
// 많은 수의 데이터를 처리할 수 있어야...
//-------------------------------------------------------------------
#include <iostream>
#include <random>
#include "save.h"

// [문제] int 100개를 저장할 공간을 만들어라.
// [0, 9'9999] 범위의 값을 갖는 int 100개에 할당하라.
// 화면에 값을 출력한다.

std::default_random_engine dre;
std::uniform_int_distribution uid(0, 99999);

//-------------
int main(void)
//-------------
{
	int a[100];			// 앞으로 T[N] 은 사용하지 않는다.

	for (int i = 0; i < 100; ++i)
		a[i] = uid(dre);

	for (int i = 0; i < 100; ++i)
		std::cout << a[i] << '\n';
	std::cout << '\n';

	save("STL.cpp");
}
=========================================================
STL.cpp: 2024-03-12 화요일 오후 2:05:58
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		3월 12일 화요일		(2주 1)
// 
// 많은 수의 데이터를 처리할 수 있어야...
//-------------------------------------------------------------------
#include <iostream>
#include <random>
#include <format>
#include "save.h"

// [문제] int 100개를 저장할 공간을 만들어라.
// [0, 9'9999] 범위의 값을 갖는 int 100개에 할당하라.
// 화면에 값을 출력한다.

std::default_random_engine dre;
std::uniform_int_distribution uid(0, 9'9999);

//-------------
int main(void)
//-------------
{
	int a[100];			// 앞으로 T[N] 은 사용하지 않는다.

	for (int i = 0; i < 100; ++i)
		a[i] = uid(dre);

	for (int i = 0; i < 100; ++i)
		std::cout << std::format("{:8}", a[i]);
	std::cout << '\n';

	save("STL.cpp");
}

=========================================================
STL.cpp: 2024-03-12 화요일 오후 2:07:43
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		3월 12일 화요일		(2주 1)
// 
// 많은 수의 데이터를 처리할 수 있어야...
//-------------------------------------------------------------------
#include <iostream>
#include <random>
#include <format>		// c++ 20
#include <print>		// c++ 23
#include "save.h"

// [문제] int 100개를 저장할 공간을 만들어라.
// [0, 9'9999] 범위의 값을 갖는 int 100개에 할당하라.
// 화면에 값을 출력한다.

std::default_random_engine dre;
std::uniform_int_distribution uid(0, 9'9999);

//-------------
int main(void)
//-------------
{
	int a[100];			// 앞으로 T[N] 은 사용하지 않는다.

	for (int i = 0; i < 100; ++i)
		a[i] = uid(dre);

	for (int i = 0; i < 100; ++i)
		std::print(std::cout, "{:8}", a[i]);
	std::cout << '\n';

	save("STL.cpp");
}

=========================================================
STL.cpp: 2024-03-12 화요일 오후 2:13:40
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		3월 12일 화요일		(2주 1)
// 
// 많은 수의 데이터를 처리할 수 있어야...
//-------------------------------------------------------------------
#include <iostream>
#include <random>
#include <format>		// c++ 20
#include <print>		// c++ 23
#include "save.h"

// [문제] int 100개를 저장할 공간을 만들어라.
// [0, 9'9999] 범위의 값을 갖는 int 100개에 할당하라.
// 화면에 값을 출력한다.

std::default_random_engine dre;
std::uniform_int_distribution uid(0, 9'9999);

//-------------
int main(void)
//-------------
{
	int a[1000];			// 앞으로 T[N] 은 사용하지 않는다.

	for (int& num : a)
		num = uid(dre);

	for (int num : a)
		std::print(std::cout, "{:8}", num);
	std::cout << '\n';

	save("STL.cpp");
}

=========================================================
STL.cpp: 2024-03-12 화요일 오후 2:16:05
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		3월 12일 화요일		(2주 1)
// 
// 많은 수의 데이터를 처리할 수 있어야...
//-------------------------------------------------------------------
#include <iostream>
#include <random>
#include <format>		// c++ 20
#include <print>		// c++ 23
#include "save.h"

// [문제] int 100개를 저장할 공간을 만들어라.
// [0, 9'9999] 범위의 값을 갖는 int 100개에 할당하라.
// 화면에 값을 출력한다.

std::default_random_engine dre;
std::uniform_int_distribution uid(0, 9'9999);

//-------------
int main(void)
//-------------
{
	int a[100];			// 앞으로 T[N] 은 사용하지 않는다.
	int max = 0;

	for (int& num : a)
		num = uid(dre);

	for (int num : a)
		std::print(std::cout, "{:8}", num);
	std::cout << '\n';

	// [문제] a의 값 중 가장 큰 값을 찾아 화면에 출력하라.

	for (int num : a)
		if (max < num)
			max = num;
	std::cout << "가장 큰 값: " << max << '\n';

	save("STL.cpp");
}

=========================================================
STL.cpp: 2024-03-12 화요일 오후 2:33:38
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		3월 12일 화요일		(2주 1)
// 
// 많은 수의 데이터를 처리할 수 있어야...
//-------------------------------------------------------------------
#include <iostream>
#include <random>
#include <format>		// c++ 20
#include <print>		// c++ 23
#include <algorithm>
#include "save.h"

// [문제] int 100개를 저장할 공간을 만들어라.
// [0, 9'9999] 범위의 값을 갖는 int 100개에 할당하라.
// 화면에 값을 출력한다.

std::default_random_engine dre;
std::uniform_int_distribution uid(0, 9'9999);

//-------------
int main(void)
//-------------
{
	int a[100];			// 앞으로 T[N] 은 사용하지 않는다.

	for (int& num : a)
		num = uid(dre);

	for (int num : a)
		std::print(std::cout, "{:8}", num);
	std::cout << '\n';

	// [문제] a의 값 중 가장 큰 값을 찾아 화면에 출력하라.
	int maxValue = std::numeric_limits<int>::min();

	for (int num : a)
		if (maxValue < num)
			maxValue = num;
	std::cout << "가장 큰 값: " << maxValue << '\n';

	save("STL.cpp");
}

=========================================================
STL.cpp: 2024-03-12 화요일 오후 2:35:35
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		3월 12일 화요일		(2주 1)
// 
// 많은 수의 데이터를 처리할 수 있어야...
//-------------------------------------------------------------------
#include <iostream>
#include <random>
#include <format>		// c++ 20
#include <print>		// c++ 23
#include <algorithm>
#include "save.h"

// [문제] int 100개를 저장할 공간을 만들어라.
// [0, 9'9999] 범위의 값을 갖는 int 100개에 할당하라.
// 화면에 값을 출력한다.

std::default_random_engine dre;
std::uniform_int_distribution uid(0, 9'9999);

//-------------
int main(void)
//-------------
{
	int a[100];			// 앞으로 T[N] 은 사용하지 않는다.
	int max = 0;

	for (int& num : a)
		num = uid(dre);

	for (int num : a)
		std::print(std::cout, "{:8}", num);
	std::cout << '\n';

	// [문제] a의 값 중 가장 큰 값을 찾아 화면에 출력하라.
	auto pos = std::max_element(std::begin(a), std::end(a));
	std::cout << "최대값: " << *pos << '\n';

	save("STL.cpp");
}

=========================================================
STL.cpp: 2024-03-12 화요일 오후 2:36:15
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		3월 12일 화요일		(2주 1)
// 
// 많은 수의 데이터를 처리할 수 있어야...
//-------------------------------------------------------------------
#include <iostream>
#include <random>
#include <format>		// c++ 20
#include <print>		// c++ 23
#include <algorithm>
#include "save.h"

// [문제] int 100개를 저장할 공간을 만들어라.
// [0, 9'9999] 범위의 값을 갖는 int 100개에 할당하라.
// 화면에 값을 출력한다.

std::default_random_engine dre;
std::uniform_int_distribution uid(0, 9'9999);

//-------------
int main(void)
//-------------
{
	int a[100];			// 앞으로 T[N] 은 사용하지 않는다.
	int max = 0;

	for (int& num : a)
		num = uid(dre);

	for (int num : a)
		std::print(std::cout, "{:8}", num);
	std::cout << '\n';

	// [문제] a의 값 중 가장 큰 값을 찾아 화면에 출력하라.
	std::cout << "최대값: " << *std::max_element(std::begin(a), std::end(a)) << '\n';

	save("STL.cpp");
}

=========================================================
STL.cpp: 2024-03-12 화요일 오후 2:57:26
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		3월 12일 화요일		(2주 1)
// 
// 많은 수의 데이터를 처리할 수 있어야...
//-------------------------------------------------------------------
#include <iostream>
#include <random>
#include <array>
#include <fstream>
#include <print>
#include "save.h"

// [문제] int 100개를 저장할 공간을 만들어라.
// [0, 9'9999] 범위의 값을 갖는 int 100개에 할당하라.
// 화면에 값을 출력한다.

std::default_random_engine dre;
std::uniform_int_distribution uid(0, 9'9999);

//-------------
int main(void)
//-------------
{
	std::array<int, 100> a;			// T[N] 대신 array<T, N>을 사용.
	
	for (int& num : a)
		num = uid(dre);

	// [문제] 파일 "int값들.txt"에 a의 int값을 모두 저장하라.
	std::ofstream out{ "int값들.txt" };			// RAII
	for (int num : a)
		print(out, "{:8}", num);

	save("STL.cpp");
}

=========================================================
STL.cpp: 2024-03-12 화요일 오후 3:09:02
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		3월 12일 화요일		(2주 1)
// 
// 많은 수의 데이터를 처리할 수 있어야...
//-------------------------------------------------------------------
#include <iostream>
#include <fstream>
#include <algorithm>
#include "save.h"

// [문제] "int값들.txt"에는 몇 개인지 모르는 int값이 있다.
// 제일 큰 값을 찾아 화면에 출력하라.

//-------------
int main(void)
//-------------
{
	std::ifstream in{ "int값들.txt" };
	if (not in) 
		exit(0);
	
	std::cout << "최대값: " << *std::max_element(std::istream_iterator<int>{in}, { }) << '\n';

	save("STL.cpp");
}