=========================================================
STL.cpp: 2024-03-14 목요일 오후 1:37:51
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		3월 14일 목요일		(2주 2)
// 
// FILE I/O text/binary - high/low level
//-------------------------------------------------------------------
#include <iostream>
#include <array>
#include "save.h"

// [문제] int 100개를 저장할 공간을 확보하라.
// int값을 1부터 시작하는 정수로 채워라.
// 파일에 "int값을.txt"에 기록하라.

//-------------
int main(void)
//-------------
{
	std::array<int, 100> a;

	for (int num : a)
		std::cout << num << '\n';

	save("STL.cpp");
}

=========================================================
STL.cpp: 2024-03-14 목요일 오후 1:39:49
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		3월 14일 목요일		(2주 2)
// 
// FILE I/O text/binary - high/low level
//-------------------------------------------------------------------
#include <iostream>
#include <array>
#include "save.h"

// [문제] int 100개를 저장할 공간을 확보하라.
// int값을 1부터 시작하는 정수로 채워라.
// 파일에 "int값을.txt"에 기록하라.

//-------------
int main(void)
//-------------
{
	// int 자료형은 초기화를 하지 않았을 경우 공간 확보만 함.
	// {}는 0으로 초기화가 아니라 디폴트 값으로 초기화 하는 것. 0이 나오는 것은 0이 디폴트 값이기 때문.
	std::array<int, 100> a{1};

	for (int num : a)
		std::cout << num << '\n';

	save("STL.cpp");
}

=========================================================
STL.cpp: 2024-03-14 목요일 오후 1:40:36
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		3월 14일 목요일		(2주 2)
// 
// FILE I/O text/binary - high/low level
//-------------------------------------------------------------------
#include <iostream>
#include <array>
#include "save.h"

// [문제] int 100개를 저장할 공간을 확보하라.
// int값을 1부터 시작하는 정수로 채워라.
// 파일에 "int값을.txt"에 기록하라.

std::array<int, 100> a;

//-------------
int main(void)
//-------------
{
	// int 자료형은 초기화를 하지 않았을 경우 공간 확보만 함.
	// {}는 0으로 초기화가 아니라 디폴트 값으로 초기화 하는 것. 0이 나오는 것은 0이 디폴트 값이기 때문.
	
	for (int num : a)
		std::cout << num << '\n';

	save("STL.cpp");
}

=========================================================
STL.cpp: 2024-03-14 목요일 오후 1:43:25
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		3월 14일 목요일		(2주 2)
// 
// FILE I/O text/binary - high/low level
//-------------------------------------------------------------------
#include <iostream>
#include <array>
#include "save.h"

// [문제] int 100개를 저장할 공간을 확보하라.
// int값을 1부터 시작하는 정수로 채워라.
// 파일에 "int값을.txt"에 기록하라.

// 데이터 세그먼트에서 초기화 되지 않은 공간에 위치.
// std::array<int, 100> a;

//-------------
int main(void)
//-------------
{
	// int 자료형은 초기화를 하지 않았을 경우 공간 확보만 함.
	// {}는 0으로 초기화가 아니라 디폴트 값으로 초기화 하는 것. 0이 나오는 것은 0이 디폴트 값이기 때문.
	
	std::array<int, 100> a;

	for (int i = 1; i <= 100; i++)
		a[i - 1] = i;

	for (int num : a)
		std::cout << num << '\n';

	save("STL.cpp");
}

=========================================================
STL.cpp: 2024-03-14 목요일 오후 1:45:19
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		3월 14일 목요일		(2주 2)
// 
// FILE I/O text/binary - high/low level
//-------------------------------------------------------------------
#include <iostream>
#include <array>
#include <print>
#include "save.h"

// [문제] int 100개를 저장할 공간을 확보하라.
// int값을 1부터 시작하는 정수로 채워라.
// 파일에 "int값을.txt"에 기록하라.

// 데이터 세그먼트에서 초기화 되지 않은 공간에 위치.
// std::array<int, 100> a;

//-------------
int main(void)
//-------------
{
	// int 자료형은 초기화를 하지 않았을 경우 공간 확보만 함.
	// {}는 0으로 초기화가 아니라 디폴트 값으로 초기화 하는 것. 0이 나오는 것은 0이 디폴트 값이기 때문.
	
	std::array<int, 100> a;

	for (int i = 1; i <= 100; i++)
		a[i - 1] = i;

	for (int num : a)
		std::print("{:8}", num);

	save("STL.cpp");
}

=========================================================
STL.cpp: 2024-03-14 목요일 오후 1:47:15
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		3월 14일 목요일		(2주 2)
// 
// FILE I/O text/binary - high/low level
//-------------------------------------------------------------------
#include <iostream>
#include <array>
#include <print>
#include "save.h"

// [문제] int 100개를 저장할 공간을 확보하라.
// int값을 1부터 시작하는 정수로 채워라.
// 파일에 "int값을.txt"에 기록하라.

// 데이터 세그먼트에서 초기화 되지 않은 공간에 위치.
// std::array<int, 100> a;

//-------------
int main(void)
//-------------
{
	// int 자료형은 초기화를 하지 않았을 경우 공간 확보만 함.
	// {}는 0으로 초기화가 아니라 디폴트 값으로 초기화 하는 것. 0이 나오는 것은 0이 디폴트 값이기 때문.
	
	std::array<int, 1000> a;

	int i{ 0 };
	for (int& num : a)
		num = ++i;

	for (int num : a)
		std::print("{:8}", num);

	save("STL.cpp");
}

=========================================================
STL.cpp: 2024-03-14 목요일 오후 1:57:23
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		3월 14일 목요일		(2주 2)
// 
// FILE I/O text/binary - high/low level
//-------------------------------------------------------------------
#include <iostream>
#include <array>
#include <print>
#include <numeric>
#include "save.h"

// [문제] int 100개를 저장할 공간을 확보하라.
// int값을 1부터 시작하는 정수로 채워라.
// 파일에 "int값을.txt"에 기록하라.

// 데이터 세그먼트에서 초기화 되지 않은 공간에 위치.
// std::array<int, 100> a;

//-------------
int main(void)
//-------------
{
	// int 자료형은 초기화를 하지 않았을 경우 공간 확보만 함.
	// {}는 0으로 초기화가 아니라 디폴트 값으로 초기화 하는 것. 0이 나오는 것은 0이 디폴트 값이기 때문.
	
	std::array<int, 100> a;

	std::iota(a.begin(), a.end(), 1);

	for (int num : a)
		std::print("{:8}", num);

	save("STL.cpp");
}

=========================================================
STL.cpp: 2024-03-14 목요일 오후 2:02:12
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		3월 14일 목요일		(2주 2)
// 
// FILE I/O text/binary - high/low level
//-------------------------------------------------------------------
#include <iostream>
#include <array>
#include <print>
#include <numeric>
#include <fstream>
#include "save.h"

// [문제] int 100개를 저장할 공간을 확보하라.
// int값을 1부터 시작하는 정수로 채워라.
// 파일에 "int값을.txt"에 기록하라.

// 데이터 세그먼트에서 초기화 되지 않은 공간에 위치.
// std::array<int, 100> a;

//-------------
int main(void)
//-------------
{
	// int 자료형은 초기화를 하지 않았을 경우 공간 확보만 함.
	// {}는 0으로 초기화가 아니라 디폴트 값으로 초기화 하는 것. 0이 나오는 것은 0이 디폴트 값이기 때문.
	
	std::array<int, 100> a;

	std::iota(a.begin(), a.end(), 1);

	std::ofstream out{ "int값들.txt" };

	for (int num : a)
		std::print(out, "{:8}", num);


	save("STL.cpp");
}

=========================================================
STL.cpp: 2024-03-14 목요일 오후 2:05:19
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		3월 14일 목요일		(2주 2)
// 
// FILE I/O text/binary - high/low level
//-------------------------------------------------------------------
#include <iostream>
#include <array>
#include <print>
#include <numeric>
#include <fstream>
#include "save.h"

// [문제] int 100개를 저장할 공간을 확보하라.
// int값을 1부터 시작하는 정수로 채워라.
// 파일에 "int값을.txt"에 기록하라.

// 데이터 세그먼트에서 초기화 되지 않은 공간에 위치.
// std::array<int, 100> a;

//-------------
int main(void)
//-------------
{
	// int 자료형은 초기화를 하지 않았을 경우 공간 확보만 함.
	// {}는 0으로 초기화가 아니라 디폴트 값으로 초기화 하는 것. 0이 나오는 것은 0이 디폴트 값이기 때문.
	
	std::array<int, 100> a;

	std::iota(a.begin(), a.end(), 1);

	std::ofstream out{ "int값들.txt" };

	for (int num : a)
		std::print(out, "{} ", num);

	// int 100개를 저장하기 위해 필요한 공간은?

	save("STL.cpp");
}

=========================================================
STL.cpp: 2024-03-14 목요일 오후 2:25:59
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		3월 14일 목요일		(2주 2)
// 
// FILE I/O text/binary - high/low level
//-------------------------------------------------------------------
#include <iostream>
#include <array>
#include <print>
#include <numeric>
#include <fstream>
#include "save.h"

// [문제] int 100개를 저장할 공간을 확보하라.
// int값을 1부터 시작하는 정수로 채워라.
// 파일에 "int값을.txt"에 기록하라.

// 데이터 세그먼트에서 초기화 되지 않은 공간에 위치.
// std::array<int, 100> a;

//-------------
int main(void)
//-------------
{
	// int 자료형은 초기화를 하지 않았을 경우 공간 확보만 함.
	// {}는 0으로 초기화가 아니라 디폴트 값으로 초기화 하는 것. 0이 나오는 것은 0이 디폴트 값이기 때문.
	
	std::array<int, 100> a;

	std::iota(a.begin(), a.end(), 1);

	std::ofstream out{ "int값들.txt" };

	out.write((char*)a.data(), a.size()*sizeof(int));

	// int 100개를 저장하기 위해 필요한 공간은?

	save("STL.cpp");
}

=========================================================
STL.cpp: 2024-03-14 목요일 오후 2:36:53
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		3월 14일 목요일		(2주 2)
// 
// FILE I/O text/binary - high/low level
//-------------------------------------------------------------------
#include <iostream>
#include <array>
#include <print>
#include <numeric>
#include <fstream>
#include "save.h"

// [문제] int 100개를 저장할 공간을 확보하라.
// int값을 1부터 시작하는 정수로 채워라.
// 파일에 "int값을.txt"에 기록하라.

// 데이터 세그먼트에서 초기화 되지 않은 공간에 위치.
// std::array<int, 100> a;

//-------------
int main(void)
//-------------
{
	// int 자료형은 초기화를 하지 않았을 경우 공간 확보만 함.
	// {}는 0으로 초기화가 아니라 디폴트 값으로 초기화 하는 것. 0이 나오는 것은 0이 디폴트 값이기 때문.
	
	std::array<int, 100> a;

	std::iota(a.begin(), a.end(), 1);

	// 텍스트 모드로 열어도 저수준 출력에는 아무 지장이 없다.
	// 다만, 운영체제가 중간에 개입하여 1바이트가 추가된다.
	std::ofstream out{ "int값들.txt", std::ios::binary };

	out.write((char*)a.data(), a.size()*sizeof(int));

	// int 100개를 저장하기 위해 필요한 공간은?

	save("STL.cpp");
}

=========================================================
STL.cpp: 2024-03-14 목요일 오후 2:44:58
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		3월 14일 목요일		(2주 2)
// 
// FILE I/O text/binary - high/low level
//-------------------------------------------------------------------
#include <iostream>
#include <array>
#include <fstream>
#include <random>
#include "save.h"

// [문제] int 100개를 저장할 공간을 확보하라.
// int값을 1부터 시작하는 정수로 채워라.
// 파일에 "int값을.txt"에 기록하라.

// 데이터 세그먼트에서 초기화 되지 않은 공간에 위치.
// std::array<int, 100> a;

std::default_random_engine dre;
std::uniform_int_distribution uid(0, 9'9999);

//-------------
int main(void)
//-------------
{
	// int 자료형은 초기화를 하지 않았을 경우 공간 확보만 함.
	// {}는 0으로 초기화가 아니라 디폴트 값으로 초기화 하는 것. 0이 나오는 것은 0이 디폴트 값이기 때문.
	
	std::array<int, 1000> a;

	for (int& num : a)
		num = uid(dre);

	std::ofstream out{ "int값들", std::ios::binary };

	out.write((char*)a.data(), a.size()*sizeof(int));

	// int 100개를 저장하기 위해 필요한 공간은?

	save("STL.cpp");
}

=========================================================
STL.cpp:, 2024-03-14 목요일 오후 3:04:01
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		3월 14일 목요일		(2주 2)
// 
// FILE I/O text/binary - high/low level
//-------------------------------------------------------------------
#include <iostream>
#include <fstream>
#include <algorithm>
#include <array>
#include "save.h"

// [문제] int 1000개를 "int값들"에 저장하였다.
// 파일은 binary 모드로 열었고
// 값은 메모리 크기 그대로 4'000 바이트를 기록하였다.
// int값 중 제일 큰 값을 찾아 화면에 출력하라.

//-------------
int main(void)
//-------------
{
	std::ifstream in{ "int값들", std::ios::binary};
	if (not in) exit(0);

	std::array<int, 1000> a;

	in.read((char*)a.data(), a.size() * sizeof(int));

	std::cout << *std::max_element(a.begin(), a.end()) << '\n';

	save("STL.cpp");
}

=========================================================
STL.cpp: 2024-03-14 목요일 오후 3:12:02
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		3월 14일 목요일		(2주 2)
// 
// FILE I/O text/binary - high/low level
//-------------------------------------------------------------------
#include <iostream>
#include <fstream>
#include <array>
#include <random>
#include "save.h"

// [문제] int 1000개를 "int값들"에 저장하였다.
// 파일은 binary 모드로 열었고
// 값은 메모리 크기 그대로 4'000 바이트를 기록하였다.
// int값 중 제일 큰 값을 찾아 화면에 출력하라.

std::default_random_engine dre;
std::uniform_int_distribution<int> uidC{ 'a', 'z' };
std::uniform_int_distribution uidNum{ -9999, 9999 };

class Dog
{
	char c{ static_cast<char>(uidC(dre)) };
	int num{ uidNum(dre) };
public:
	friend std::ostream& operator<<(std::ostream& os, const Dog& dog)
	{
		return os << "글자: " << dog.c << ", 숫자: " << dog.num;
	}
};

//-------------
int main(void)
//-------------
{
	std::array<Dog, 100> dogs;

	for (const Dog& dog : dogs)
		std::cout<< dog << '\n';

	std::ofstream out{ "개들", std::ios::binary };
	out.write((char*)dogs.data(), sizeof(Dog)*dogs.size());

	save("STL.cpp");
}