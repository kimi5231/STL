=========================================================
STL.cpp: 2024-04-04 목요일 오후 1:42:05
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		4월 4일 목요일		(5주 2)
// 
// 4월 25일 (8주 1일) - 중간시험
//-------------------------------------------------------------------
#include <iostream>
#include "save.h"

class String
{
private:	// private은 뒤에 숨겨서 쓰는 것이 좋음.
	size_t len{};
	std::unique_ptr<char[]> p{};
public:
	String(const char* str) : len(strlen(str)) {
		p = std::make_unique<char[]>(len);
		memcpy(p.get(), str, len);
	}
	String(const String& other) : len(other.len) {		// 복사생성자 추가.
		p = std::make_unique<char[]>(len);
		memcpy(p.get(), other.p.get(), len);
	}
	friend std::ostream& operator<<(std::ostream& os, const String& s) {
		for (size_t i = 0; i < s.len; i++)
			os << s.p.get()[i];
		return os;
	}
};

//-------------
int main(void)
//-------------
{
	String s{ "STL 공부를 위한 클래스" };
	String t = s;

	std::cout << s << '\n';
	std::cout << t << '\n';

	save("STL.cpp");
}

=========================================================
STL.cpp: 2024-04-04 목요일 오후 1:50:23
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		4월 4일 목요일		(5주 2)
// 
// 4월 25일 (8주 1일) - 중간시험
//-------------------------------------------------------------------
#include <iostream>
#include "save.h"
#include "String.h"

//-------------
int main(void)
//-------------
{
	String s{ "STL 공부를 위한 클래스" };
	String t = s;

	std::cout << s << '\n';
	std::cout << t << '\n';

	save("STL.cpp");
}

=========================================================
STL.cpp: 2024-04-04 목요일 오후 1:58:38
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		4월 4일 목요일		(5주 2)
// 
// 4월 25일 (8주 1일) - 중간시험
//-------------------------------------------------------------------
#include <iostream>
#include "save.h"
#include "String.h"

//-------------
int main(void)
//-------------
{
	String s{ "STL 공부를 위한 클래스" };
	String t;
	t = s;

	std::cout << s << '\n';
	std::cout << t << '\n';

	save("STL.cpp");
}

=========================================================
STL.cpp: 2024-04-04 목요일 오후 2:16:41
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		4월 4일 목요일		(5주 2)
// 
// 4월 25일 (8주 1일) - 중간시험
//-------------------------------------------------------------------
#include <iostream>
#include <array>
#include "save.h"
#include "String.h"

//-------------
int main(void)
//-------------
{
	std::array<String, 5> a{
		"2024년", "4월", "4일", "목요일", "즐거운 STL"
	};

	save("STL.cpp");
}

=========================================================
STL.cpp: 2024-04-04 목요일 오후 2:18:45
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		4월 4일 목요일		(5주 2)
// 
// 4월 25일 (8주 1일) - 중간시험
//-------------------------------------------------------------------
#include <iostream>
#include <array>
#include "save.h"
#include "String.h"

//-------------
int main(void)
//-------------
{
	std::array<String, 5> a{
		"2024년", "4월", "4일", "목요일", "즐거운 STL"
	};

	for (String& s : a)
		std::cout << s << '\n';

	save("STL.cpp");
}

=========================================================
STL.cpp:, 2024-04-04 목요일 오후 2:33:10
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		4월 4일 목요일		(5주 2)
// 
// 4월 25일 (8주 1일) - 중간시험
//-------------------------------------------------------------------
#include <iostream>
#include <array>
#include <algorithm>
#include "save.h"
#include "String.h"

//-------------
int main(void)
//-------------
{
	std::array<String, 5> a{
		"2024년", "4월", "4일", "목요일", "즐거운 STL"
	};

	// a를 길이 오름차순으로 정렬하라.
	std::sort(a.begin(), a.end(), [](const String& a, const String& b) {
		return a.getLen() < b.getLen();
		});

	for (String& s : a)
		std::cout << s << '\n';

	save("STL.cpp");
}

=========================================================
STL.cpp: 2024-04-04 목요일 오후 2:37:33
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		4월 4일 목요일		(5주 2)
// 
// 4월 25일 (8주 1일) - 중간시험
//-------------------------------------------------------------------
#include <iostream>
#include <array>
#include <algorithm>
#include "save.h"
#include "String.h"

//-------------
int main(void)
//-------------
{
	std::array<String, 5> a{
		"999999999",
		"333",
		"1",
		"7777777",
		"55555"
	};

	// a를 길이 오름차순으로 정렬하라.
	std::sort(a.begin(), a.end(), [](const String& a, const String& b) {
		return a.getLen() < b.getLen();
		});

	for (String& s : a)
		std::cout << s << '\n';

	save("STL.cpp");
}

=========================================================
STL.cpp: 2024-04-04 목요일 오후 2:38:39
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		4월 4일 목요일		(5주 2)
// 
// 4월 25일 (8주 1일) - 중간시험
//-------------------------------------------------------------------
#include <iostream>
#include <array>
#include <algorithm>
#include "save.h"
#include "String.h"

extern bool 관찰;

//-------------
int main(void)
//-------------
{
	std::array<String, 5> a{
		"999999999",
		"333",
		"1",
		"7777777",
		"55555"
	};

	// a를 길이 오름차순으로 정렬하라.
	관찰 = true;
	std::sort(a.begin(), a.end(), [](const String& a, const String& b) {
		return a.getLen() < b.getLen();
		});
	관찰 = false;

	for (String& s : a)
		std::cout << s << '\n';

	save("STL.cpp");
}

=========================================================
STL.cpp: 2024-04-04 목요일 오후 2:57:07
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		4월 4일 목요일		(5주 2)
// 
// 4월 25일 (8주 1일) - 중간시험
//-------------------------------------------------------------------
#include <iostream>
#include <array>
#include <algorithm>
#include "save.h"
#include "String.h"

extern bool 관찰;

//-------------
int main(void)
//-------------
{
	std::array<String, 5> a{
		"999999999",
		"333",
		"1",
		"7777777",
		"55555"
	};

	// a를 길이 오름차순으로 정렬하라.
	관찰 = true;
	std::sort(a.begin(), a.end(), [](const String& a, const String& b) {
		return a.getLen() < b.getLen();
		});
	관찰 = false;

	for (String& s : a)
		std::cout << s << '\n';

	save("STL.cpp");
}

/*
[1] - 이동할당연산자, 개수:3, 주소:000001DF0294F4F0
[6] - 소멸, 개수:0, 주소:0000000000000000
[7] - 이동생성, 개수:1, 주소:000001DF0294F560
[3] - 이동할당연산자, 개수:9, 주소:000001DF0294EA40
[2] - 이동할당연산자, 개수:3, 주소:000001DF0294F4F0
[1] - 이동할당연산자, 개수:1, 주소:000001DF0294F560
[7] - 소멸, 개수:0, 주소:0000000000000000
[8] - 이동생성, 개수:7, 주소:000001DF0294F450
[4] - 이동할당연산자, 개수:9, 주소:000001DF0294EA40
[3] - 이동할당연산자, 개수:7, 주소:000001DF0294F450
[8] - 소멸, 개수:0, 주소:0000000000000000
[9] - 이동생성, 개수:5, 주소:000001DF0294F540
[5] - 이동할당연산자, 개수:9, 주소:000001DF0294EA40
[4] - 이동할당연산자, 개수:7, 주소:000001DF0294F450
[3] - 이동할당연산자, 개수:5, 주소:000001DF0294F540
[9] - 소멸, 개수:0, 주소:0000000000000000
*/

=========================================================
STL.cpp: 2024-04-04 목요일 오후 3:10:52
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		4월 4일 목요일		(5주 2)
// 
// 4월 25일 (8주 1일) - 중간시험
//-------------------------------------------------------------------
#include <iostream>
#include <array>
#include <algorithm>
#include "save.h"
#include "String.h"

extern bool 관찰;

//-------------
int main(void)
//-------------
{
	std::array<String, 5> a{
		"12341232312312312312312314123999999999",
		"23313143423123213243245324567463214567463213`3243565333",
		"213333333333333424121",
		"777777713231232312323123",
		"555551323213123213"
	};

	// [문제] a의 각 String이 관리하는 글자를 오름차순으로 정렬하라.
	for (const String& s : a)
		std::sort(s.getData(), s.getData() + s.getLen());

	for (String& s : a)
		std::cout << s << '\n';

	save("STL.cpp");
}

=========================================================
STL.cpp:, 2024-04-04 목요일 오후 3:11:01
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		4월 4일 목요일		(5주 2)
// 
// 4월 25일 (8주 1일) - 중간시험
//-------------------------------------------------------------------
#include <iostream>
#include <array>
#include <algorithm>
#include "save.h"
#include "String.h"

extern bool 관찰;

//-------------
int main(void)
//-------------
{
	std::array<String, 5> a{
		"12341232312312312312312314123999999999",
		"23313143423123213243245324567463214567463213`3243565333",
		"213333333333333424121",
		"777777713231232312323123",
		"555551323213123213"
	};

	관찰 = true;
	// [문제] a의 각 String이 관리하는 글자를 오름차순으로 정렬하라.
	for (const String& s : a)
		std::sort(s.getData(), s.getData() + s.getLen());
	관찰 = false;

	for (String& s : a)
		std::cout << s << '\n';

	save("STL.cpp");
}