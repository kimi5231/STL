
//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		4월 4일 목요일		(5주 2)
// 
// 4월 25일 (8주 1일) - 중간시험
//-------------------------------------------------------------------
#include <iostream>
#include <array>
#include <algorithm>
#include "save.h"
#include "String.h"

extern bool 관찰;

//-------------
int main(void)
//-------------
{
	std::array<String, 5> a{
		"12341232312312312312312314123999999999",
		"23313143423123213243245324567463214567463213`3243565333",
		"213333333333333424121",
		"777777713231232312323123",
		"555551323213123213"
	};

	관찰 = true;
	// [문제] a의 각 String이 관리하는 글자를 오름차순으로 정렬하라.
	for (const String& s : a)
		std::sort(s.getData(), s.getData() + s.getLen());
	관찰 = false;

	for (String& s : a)
		std::cout << s << '\n';

	save("STL.cpp");
}
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

=========================================================
STL.cpp:, 2024-04-09 화요일 오후 2:32:42
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		4월 9일 화요일		(6주 1)
// 
// 4월 25일 (8주 1일) - 중간시험
// 
// STL Container - Containers are objects that store other objects.
//-------------------------------------------------------------------
#include <iostream>
#include <array>
#include "save.h"
#include "String.h"

extern bool 관찰;

//-------------
int main(void)
//-------------
{
	std::array<int, 10> a;

	auto p = a.begin();
	std::cout << typeid(p).name() << '\n';

	save("STL.cpp");
}

=========================================================
STL.cpp:, 2024-04-09 화요일 오후 2:36:37
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		4월 9일 화요일		(6주 1)
// 
// 4월 25일 (8주 1일) - 중간시험
// 
// STL Container - Containers are objects that store other objects.
//-------------------------------------------------------------------
#include <iostream>
#include <array>
#include "save.h"
#include "String.h"

extern bool 관찰;

//-------------
int main(void)
//-------------
{
	std::array<int, 10> a;

	// a의 모든값을 출력한다.
	
	// iterator의 기본 동작은 다음과 같다.
	std::array<int, 10>::iterator p = a.begin();
	p.operator++();
	std::array<int, 10>::iterator e = a.end();

	save("STL.cpp");
}

=========================================================
STL.cpp:, 2024-04-09 화요일 오후 2:38:23
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		4월 9일 화요일		(6주 1)
// 
// 4월 25일 (8주 1일) - 중간시험
// 
// STL Container - Containers are objects that store other objects.
//-------------------------------------------------------------------
#include <iostream>
#include <array>
#include "save.h"
#include "String.h"

extern bool 관찰;

//-------------
int main(void)
//-------------
{
	std::array<int, 10> a;

	// a의 모든값을 출력한다.
	for (std::array<int, 10>::iterator p = a.begin(); p != a.end(); p.operator++()) {
		std::cout << p.operator*() << '\n';
	}

	save("STL.cpp");
}

=========================================================
STL.cpp:, 2024-04-09 화요일 오후 2:38:46
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		4월 9일 화요일		(6주 1)
// 
// 4월 25일 (8주 1일) - 중간시험
// 
// STL Container - Containers are objects that store other objects.
//-------------------------------------------------------------------
#include <iostream>
#include <array>
#include "save.h"
#include "String.h"

extern bool 관찰;

//-------------
int main(void)
//-------------
{
	std::array<int, 10> a{1, 3, 5, 7, 9, 2, 4, 6, 8, 10};

	// a의 모든값을 출력한다.
	for (std::array<int, 10>::iterator p = a.begin(); p != a.end(); p.operator++()) {
		std::cout << p.operator*() << '\n';
	}

	save("STL.cpp");
}

=========================================================
STL.cpp:, 2024-04-09 화요일 오후 2:41:19
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		4월 9일 화요일		(6주 1)
// 
// 4월 25일 (8주 1일) - 중간시험
// 
// STL Container - Containers are objects that store other objects.
//-------------------------------------------------------------------
#include <iostream>
#include <array>
#include <list>
#include "save.h"
#include "String.h"

extern bool 관찰;

//-------------
int main(void)
//-------------
{
	std::list<int> a{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 333};

	// a의 모든값을 출력한다.
	for (auto p = a.begin(); p != a.end(); p.operator++()) {
		std::cout << p.operator*() << '\n';
	}

	save("STL.cpp");
}

=========================================================
STL.cpp:, 2024-04-09 화요일 오후 2:43:59
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		4월 9일 화요일		(6주 1)
// 
// 4월 25일 (8주 1일) - 중간시험
// 
// STL Container - Containers are objects that store other objects.
//-------------------------------------------------------------------
#include <iostream>
#include <array>
#include <list>
#include <set>
#include "save.h"
#include "String.h"

extern bool 관찰;

//-------------
int main(void)
//-------------
{
	std::set<int> a{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 333};

	// a의 모든값을 출력한다.
	for (auto p = a.begin(); p != a.end(); p.operator++()) {
		std::cout << p.operator*() << '\n';
	}

	save("STL.cpp");
}

=========================================================
STL.cpp:, 2024-04-09 화요일 오후 2:46:35
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		4월 9일 화요일		(6주 1)
// 
// 4월 25일 (8주 1일) - 중간시험
// 
// STL Container - Containers are objects that store other objects.
//-------------------------------------------------------------------
#include <iostream>
#include <array>
#include "save.h"
#include "String.h"

extern bool 관찰;

//-------------
int main(void)
//-------------
{
	std::array<int, 3> a{ 1, 2, 3 };

	// a의 모든값을 출력한다.
	// ++ 왼쪽에 쓸 것.
	for (auto p = a.begin(); p != a.end(); ++p) {
		std::cout << *p << '\n';
	}

	save("STL.cpp");
}

=========================================================
STL.cpp:, 2024-04-09 화요일 오후 2:47:19
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		4월 9일 화요일		(6주 1)
// 
// 4월 25일 (8주 1일) - 중간시험
// 
// STL Container - Containers are objects that store other objects.
//-------------------------------------------------------------------
#include <iostream>
#include <array>
#include "save.h"
#include "String.h"

extern bool 관찰;

//-------------
int main(void)
//-------------
{
	std::array<int, 3> a{ 1, 2, 3 };

	// a의 모든값을 출력한다.
	// ++ 왼쪽에 쓸 것.
	for (auto& d: a) {
		std::cout << d << '\n';
	}

	save("STL.cpp");
}

=========================================================
STL.cpp:, 2024-04-09 화요일 오후 2:47:31
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		4월 9일 화요일		(6주 1)
// 
// 4월 25일 (8주 1일) - 중간시험
// 
// STL Container - Containers are objects that store other objects.
//-------------------------------------------------------------------
#include <iostream>
#include <array>
#include "save.h"
#include "String.h"

extern bool 관찰;

//-------------
int main(void)
//-------------
{
	std::array<int, 3> a{ 1, 2, 3 };

	// a의 모든값을 출력한다.
	// ++ 왼쪽에 쓸 것.
	for (auto& d: a)
		std::cout << d << '\n';

	save("STL.cpp");
}

=========================================================
STL.cpp:, 2024-04-09 화요일 오후 2:49:39
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		4월 9일 화요일		(6주 1)
// 
// 4월 25일 (8주 1일) - 중간시험
// 
// STL Container - Containers are objects that store other objects.
//-------------------------------------------------------------------
#include <iostream>
#include <array>
#include "save.h"
#include "String.h"

extern bool 관찰;

//-------------
int main(void)
//-------------
{
	std::array<int, 3> a{ 1, 2, 3 };

	// a의 모든값을 출력한다.
	// ++ 왼쪽에 쓸 것.
	for (auto& d: a)			// range-based for -> range for
		std::cout << d << '\n';

	save("STL.cpp");
}

=========================================================
STL.cpp:, 2024-04-09 화요일 오후 2:50:02
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		4월 9일 화요일		(6주 1)
// 
// 4월 25일 (8주 1일) - 중간시험
// 
// STL Container - Containers are objects that store other objects.
//-------------------------------------------------------------------
#include <iostream>
#include <array>
#include "save.h"
#include "String.h"

extern bool 관찰;

//-------------
int main(void)
//-------------
{
	std::array<int, 3> a{ 1, 2, 3 };

	// a의 모든값을 출력한다.
	// ++ 왼쪽에 쓸 것.
	for (auto& d: a)			// syntactic sugar
		std::cout << d << '\n';

	save("STL.cpp");
}

=========================================================
STL.cpp:, 2024-04-09 화요일 오후 2:51:59
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		4월 9일 화요일		(6주 1)
// 
// 4월 25일 (8주 1일) - 중간시험
// 
// STL Container - Containers are objects that store other objects.
//-------------------------------------------------------------------
#include <iostream>
#include <array>
#include "save.h"
#include "String.h"

extern bool 관찰;

//-------------
int main(void)
//-------------
{
	std::array<int, 3> a{ 1, 2, 3 };	// int[3]

	std::cout << a[-10] << '\n';
	std::cout << a[10] << '\n';

	save("STL.cpp");
}

=========================================================
STL.cpp:, 2024-04-09 화요일 오후 2:59:27
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		4월 9일 화요일		(6주 1)
// 
// 4월 25일 (8주 1일) - 중간시험
// 
// STL Container - Containers are objects that store other objects.
//-------------------------------------------------------------------
#include <iostream>
#include <array>
#include "save.h"
#include "String.h"

extern bool 관찰;

//-------------
int main(void)
//-------------
{
	std::array<int, 3> a{ 1, 2, 3 };	// int[3]

START:
	std::cout << "숫자? ";
	int num;
	std::cin >> num;

	if (0 < num and 2 < num)
		std::cout << a[num] << '\n';
	else
		goto START;

	save("STL.cpp");
}

=========================================================
STL.cpp:, 2024-04-09 화요일 오후 2:59:56
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		4월 9일 화요일		(6주 1)
// 
// 4월 25일 (8주 1일) - 중간시험
// 
// STL Container - Containers are objects that store other objects.
//-------------------------------------------------------------------
#include <iostream>
#include <array>
#include "save.h"
#include "String.h"

extern bool 관찰;

//-------------
int main(void)
//-------------
{
	std::array<int, 3> a{ 1, 2, 3 };	// int[3]

START:
	std::cout << "숫자? ";
	int num;
	std::cin >> num;

	if (0 < num and num < 2)
		std::cout << a[num] << '\n';
	else
		goto START;

	save("STL.cpp");
}

=========================================================
STL.cpp:, 2024-04-09 화요일 오후 3:03:00
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		4월 9일 화요일		(6주 1)
// 
// 4월 25일 (8주 1일) - 중간시험
// 
// STL Container - Containers are objects that store other objects.
//-------------------------------------------------------------------
#include <iostream>
#include <array>
#include "save.h"
#include "String.h"

extern bool 관찰;

//-------------
int main(void)
//-------------
{
	std::array<int, 3> a{ 1, 2, 3 };	// int[3]

	try {
		a.at(-20);
	}
	catch(const std::exception& e) {
		std::cout << e.what() << '\n';
	}

	save("STL.cpp");
}

=========================================================
STL.cpp:, 2024-04-09 화요일 오후 3:09:25
=========================================================
