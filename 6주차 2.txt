
//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		4월 9일 화요일		(6주 1)
// 
// 4월 25일 (8주 1일) - 중간시험
// 
// STL Container - Containers are objects that store other objects.
// 실습할 시간을 줘야 한다.
//-------------------------------------------------------------------
#include <iostream>
#include <array>
#include <fstream>
#include <string>
#include "save.h"
#include "String.h"

extern bool 관찰;

//-------------
int main(void)
//-------------
{
	std::array<std::string, 50> a;

	// [문제] "STL.cpp"의 단어를 a에 저장하라.
	// 길이오름차순으로 a를 정렬하라.
	// 화면에 출력하라.

	std::ifstream in{ "STL.cpp" };
	
	for (int i = 0; i < 50; ++i)
		in >> a[i];					// std::string을 이용해서 하자.

	save("STL.cpp");
}

=========================================================
STL.cpp:, 2024-04-11 목요일 오후 1:38:35
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		4월 11일 목요일		(6주 2)
// 
// 4월 25일 (8주 1일) - 중간시험
// 
// STL Container - Containers are objects that store other objects.
// 실습할 시간을 줘야 한다.
//-------------------------------------------------------------------
#include <iostream>
#include <array>
#include <fstream>
#include <string>
#include "save.h"
#include "String.h"

extern bool 관찰;

//-------------
int main(void)
//-------------
{
	std::array<String, 50> a;

	// [문제] "STL.cpp"의 단어를 a에 저장하라.
	// 길이오름차순으로 a를 정렬하라.
	// 화면에 출력하라.

	std::ifstream in{ "STL.cpp" };
	
	for (int i = 0; i < 50; ++i)
		in >> a[i];					// std::string을 이용해서 하자.

	// 길이오름차순
	for (const String& s : a)
		std::cout << s << '\n';

	save("STL.cpp");
}

=========================================================
STL.cpp:, 2024-04-11 목요일 오후 1:39:00
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		4월 11일 목요일		(6주 2)
// 
// 4월 25일 (8주 1일) - 중간시험
// 
// STL Container - Containers are objects that store other objects.
// 실습할 시간을 줘야 한다.
//-------------------------------------------------------------------
#include <iostream>
#include <array>
#include <fstream>
#include "save.h"
#include "String.h"

extern bool 관찰;

//-------------
int main(void)
//-------------
{
	std::array<String, 50> a;

	// [문제] "STL.cpp"의 단어를 a에 저장하라.
	// 길이오름차순으로 a를 정렬하라.
	// 화면에 출력하라.

	std::ifstream in{ "STL.cpp" };
	
	for (int i = 0; i < 50; ++i)
		in >> a[i];					// std::string을 이용해서 하자.

	// 길이오름차순
	for (const String& s : a)
		std::cout << s << '\n';

	save("STL.cpp");
}

=========================================================
STL.cpp:, 2024-04-11 목요일 오후 1:40:45
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		4월 11일 목요일		(6주 2)
// 
// 4월 25일 (8주 1일) - 중간시험
// 
// STL Container - Containers are objects that store other objects.
// 실습할 시간을 줘야 한다.
//-------------------------------------------------------------------
#include <iostream>
#include <array>
#include <fstream>
#include <algorithm>
#include "save.h"
#include "String.h"

extern bool 관찰;

//-------------
int main(void)
//-------------
{
	std::array<String, 50> a;

	// [문제] "STL.cpp"의 단어를 a에 저장하라.
	// 길이오름차순으로 a를 정렬하라.
	// 화면에 출력하라.

	std::ifstream in{ "STL.cpp" };
	
	for (int i = 0; i < 50; ++i)
		in >> a[i];					// std::string을 이용해서 하자.

	// 길이오름차순
	std::sort(a.begin(), a.end(), [](const String& a, const String& b) {
		return a.getLen() < b.getLen();
		});

	for (const String& s : a)
		std::cout << s << '\n';

	save("STL.cpp");
}

=========================================================
STL.cpp:, 2024-04-11 목요일 오후 1:45:14
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		4월 11일 목요일		(6주 2)
// 
// 4월 25일 (8주 1일) - 중간시험
// 
// STL container - Sequence - vector(dynamic array - [] operator)
//-------------------------------------------------------------------
#include <iostream>
#include <vector>
#include "save.h"
#include "String.h"

extern bool 관찰;

//-------------
int main(void)
//-------------
{
	std::vector<int> v;

	std::cout << v.size() << '\n';

	save("STL.cpp");
}

=========================================================
STL.cpp:, 2024-04-11 목요일 오후 1:45:30
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		4월 11일 목요일		(6주 2)
// 
// 4월 25일 (8주 1일) - 중간시험
// 
// STL container - Sequence - vector(dynamic array - [] operator)
//-------------------------------------------------------------------
#include <iostream>
#include <vector>
#include "save.h"
#include "String.h"

extern bool 관찰;

//-------------
int main(void)
//-------------
{
	std::vector<int> v;

	std::cout << sizeof v << '\n';

	save("STL.cpp");
}

=========================================================
STL.cpp:, 2024-04-11 목요일 오후 1:47:08
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		4월 11일 목요일		(6주 2)
// 
// 4월 25일 (8주 1일) - 중간시험
// 
// STL container - Sequence - vector(dynamic array - [] operator)
//-------------------------------------------------------------------
#include <iostream>
#include <vector>
#include "save.h"
#include "String.h"

extern bool 관찰;

//-------------
int main(void)
//-------------
{
	std::vector<int> v(100);

	for (int num : v)
		std::cout << num << ' ';
	std::cout << '\n';

	std::cout << sizeof v << '\n';

	save("STL.cpp");
}

=========================================================
STL.cpp:, 2024-04-11 목요일 오후 1:49:12
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		4월 11일 목요일		(6주 2)
// 
// 4월 25일 (8주 1일) - 중간시험
// 
// STL container - Sequence - vector(dynamic array - [] operator)
//-------------------------------------------------------------------
#include <iostream>
#include <vector>
#include <ranges>
#include "save.h"
#include "String.h"

extern bool 관찰;

//-------------
int main(void)
//-------------
{
	std::vector<int> v(1'0000'0000);

	for (int num : v | std::views::drop(v.size()-100))
		std::cout << num << ' ';
	std::cout << '\n';

	std::cout << sizeof v << '\n';

	save("STL.cpp");
}

=========================================================
STL.cpp:, 2024-04-11 목요일 오후 2:02:03
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		4월 11일 목요일		(6주 2)
// 
// 4월 25일 (8주 1일) - 중간시험
// 
// STL container - Sequence - vector(dynamic array - [] operator)
//-------------------------------------------------------------------
#include <iostream>
#include <vector>
#include <ranges>
#include "save.h"
#include "String.h"

extern bool 관찰;

//-------------
int main(void)
//-------------
{
	관찰 = true;

	std::vector<String> v;

	v.push_back("2024년");

	save("STL.cpp");
}

=========================================================
STL.cpp:, 2024-04-11 목요일 오후 2:09:17
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		4월 11일 목요일		(6주 2)
// 
// 4월 25일 (8주 1일) - 중간시험
// 
// STL container - Sequence - vector(dynamic array - [] operator)
//-------------------------------------------------------------------
#include <iostream>
#include <vector>
#include <ranges>
#include "save.h"
#include "String.h"

extern bool 관찰;

//-------------
int main(void)
//-------------
{
	관찰 = true;

	std::vector<String> v;
	std::cout << "v의 용향 - " << v.capacity() << '\n';

	v.push_back("2024년");

	save("STL.cpp");
}

=========================================================
STL.cpp:, 2024-04-11 목요일 오후 2:09:27
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		4월 11일 목요일		(6주 2)
// 
// 4월 25일 (8주 1일) - 중간시험
// 
// STL container - Sequence - vector(dynamic array - [] operator)
//-------------------------------------------------------------------
#include <iostream>
#include <vector>
#include <ranges>
#include "save.h"
#include "String.h"

extern bool 관찰;

//-------------
int main(void)
//-------------
{
	관찰 = true;

	std::vector<String> v;
	std::cout << "v의 용량 - " << v.capacity() << '\n';

	v.push_back("2024년");

	save("STL.cpp");
}

=========================================================
STL.cpp:, 2024-04-11 목요일 오후 2:16:01
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		4월 11일 목요일		(6주 2)
// 
// 4월 25일 (8주 1일) - 중간시험
// 
// STL container - Sequence - vector(dynamic array - [] operator)
//-------------------------------------------------------------------
#include <iostream>
#include <vector>
#include <ranges>
#include "save.h"
#include "String.h"

extern bool 관찰;

//-------------
int main(void)
//-------------
{
	관찰 = true;

	std::vector<String> v;
	std::cout << "v의 용량 - " << v.capacity() << '\n';

	std::cout << '\n' << "원소 추가 -------------------" << '\n' << '\n';
	v.push_back("2024년");

	std::cout << '\n' << "원소 추가 -------------------" << '\n' << '\n';
	v.push_back("4월");

	save("STL.cpp");
	std::cout << '\n' << "main 끝" << '\n';
}

=========================================================
STL.cpp:, 2024-04-11 목요일 오후 2:22:02
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		4월 11일 목요일		(6주 2)
// 
// 4월 25일 (8주 1일) - 중간시험
// 
// STL container - Sequence - vector(dynamic array - [] operator)
//-------------------------------------------------------------------
#include <iostream>
#include <vector>
#include <ranges>
#include "save.h"
#include "String.h"

extern bool 관찰;

//-------------
int main(void)
//-------------
{
	관찰 = true;

	std::vector<String> v;
	std::cout << "v의 용량 - " << v.capacity() << '\n';

	std::cout << '\n' << "원소 추가 -------------------" << '\n' << '\n';
	v.push_back("2024년");

	std::cout << '\n' << "원소 추가 -------------------" << '\n' << '\n';
	v.push_back("4월");

	save("STL.cpp");
	std::cout << '\n' << "main 끝" << '\n';
}

=========================================================
STL.cpp:, 2024-04-11 목요일 오후 2:42:48
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		4월 11일 목요일		(6주 2)
// 
// 4월 25일 (8주 1일) - 중간시험
// 
// STL container - Sequence - vector(dynamic array - [] operator)
//-------------------------------------------------------------------
#include <iostream>
#include <vector>
#include <ranges>
#include "save.h"
#include "String.h"

extern bool 관찰;

//-------------
int main(void)
//-------------
{
	관찰 = true;

	std::vector<String> v;
	v.reserve(10);
	
	std::cout << "v의 용량 - " << v.capacity() << '\n';

	std::cout << '\n' << "원소 추가 -------------------" << '\n' << '\n';
	v.push_back("2024년");

	std::cout << '\n' << "원소 추가 -------------------" << '\n' << '\n';
	v.push_back("4월");

	save("STL.cpp");
	std::cout << '\n' << "main 끝" << '\n';
}

=========================================================
STL.cpp:, 2024-04-11 목요일 오후 2:44:03
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		4월 11일 목요일		(6주 2)
// 
// 4월 25일 (8주 1일) - 중간시험
// 
// STL container - Sequence - vector(dynamic array - [] operator)
//-------------------------------------------------------------------
#include <iostream>
#include <vector>
#include <ranges>
#include "save.h"
#include "String.h"

extern bool 관찰;

//-------------
int main(void)
//-------------
{
	관찰 = true;

	std::vector<String> v;
	//v.reserve(10);
	
	std::cout << "v의 용량 - " << v.capacity() << '\n';

	std::cout << '\n' << "원소 추가 -------------------" << '\n' << '\n';
	v.push_back("2024년");

	std::cout << '\n' << "원소 추가 -------------------" << '\n' << '\n';
	v.push_back("4월");

	std::cout << '\n' << "원소 추가 -------------------" << '\n' << '\n';
	v.push_back("11일");

	save("STL.cpp");
	std::cout << '\n' << "main 끝" << '\n';
}

=========================================================
STL.cpp:, 2024-04-11 목요일 오후 2:54:59
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		4월 11일 목요일		(6주 2)
// 
// 4월 25일 (8주 1일) - 중간시험
// 
// STL container - Sequence - vector(dynamic array - [] operator)
//-------------------------------------------------------------------
#include <iostream>
#include <vector>
#include <ranges>
#include "save.h"
#include "String.h"

extern bool 관찰;

//-------------
int main(void)
//-------------
{
	관찰 = true;

	std::vector<String> v;
	v.reserve(10);			// 공간을 미리 마련하고 사용하자
							// - 새 메모리를 확보하기 위한 노력이 필요없음
	
	std::cout << "v의 용량 - " << v.capacity() << '\n';

	std::cout << '\n' << "원소 추가 -------------------" << '\n' << '\n';
	v.push_back("2024년");
	// push_back -> O(1), armotized constant time

	std::cout << '\n' << "원소 추가 -------------------" << '\n' << '\n';
	v.push_back("4월");

	std::cout << '\n' << "원소 추가 -------------------" << '\n' << '\n';
	v.push_back("11일");

	save("STL.cpp");
	std::cout << '\n' << "main 끝" << '\n';
}

=========================================================
STL.cpp:, 2024-04-11 목요일 오후 3:02:25
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		4월 11일 목요일		(6주 2)
// 
// 4월 25일 (8주 1일) - 중간시험
// 
// STL container - Sequence - vector(dynamic array - [] operator)
//-------------------------------------------------------------------
#include <iostream>
#include <vector>
#include <ranges>
#include "save.h"
#include "String.h"

extern bool 관찰;

//-------------
int main(void)
//-------------
{
	관찰 = true;

	std::vector<String> v;
	v.reserve(10);			// 공간을 미리 마련하고 사용하자
							// - 새 메모리를 확보하기 위한 노력이 필요없음
	
	std::cout << "v의 용량 - " << v.capacity() << '\n';

	std::cout << '\n' << "원소 추가 -------------------" << '\n' << '\n';
	v.push_back("2024년");
	// push_back -> O(1), armotized constant time

	std::cout << '\n' << "원소 추가 -------------------" << '\n' << '\n';
	v.push_back("4월");

	std::cout << '\n' << "원소 추가 -------------------" << '\n' << '\n';
	v.push_back("11일");

	save("STL.cpp");
	std::cout << '\n' << "main 끝" << '\n';
}

=========================================================
STL.cpp:, 2024-04-11 목요일 오후 3:03:13
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		4월 11일 목요일		(6주 2)
// 
// 4월 25일 (8주 1일) - 중간시험
// 
// STL container - Sequence - vector(dynamic array - [] operator)
//-------------------------------------------------------------------
#include <iostream>
#include <vector>
#include <ranges>
#include "save.h"
#include "String.h"

extern bool 관찰;

//-------------
int main(void)
//-------------
{
	관찰 = true;

	std::vector<String> v;
	v.reserve(10);			// 공간을 미리 마련하고 사용하자
							// - 새 메모리를 확보하기 위한 노력이 필요없음
	
	std::cout << "v의 용량 - " << v.capacity() << '\n';

	std::cout << '\n' << "원소 추가 -------------------" << '\n' << '\n';
	v.emplace_back("2024년");
	// push_back -> O(1), armotized constant time

	std::cout << '\n' << "원소 추가 -------------------" << '\n' << '\n';
	v.emplace_back("4월");

	std::cout << '\n' << "원소 추가 -------------------" << '\n' << '\n';
	v.emplace_back("11일");

	save("STL.cpp");
	std::cout << '\n' << "main 끝" << '\n';
}

=========================================================
STL.cpp:, 2024-04-11 목요일 오후 3:04:06
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		4월 11일 목요일		(6주 2)
// 
// 4월 25일 (8주 1일) - 중간시험
// 
// STL container - Sequence - vector(dynamic array - [] operator)
//-------------------------------------------------------------------
#include <iostream>
#include <vector>
#include <ranges>
#include "save.h"
#include "String.h"

extern bool 관찰;

//-------------
int main(void)
//-------------
{
	관찰 = true;

	std::vector<String> v;
	v.reserve(10);
	
	v.emplace_back("2024년");
	v.emplace_back("4월");
	v.emplace_back("11일");

	save("STL.cpp");
}

=========================================================
STL.cpp:, 2024-04-11 목요일 오후 3:09:40
=========================================================

//-------------------------------------------------------------------
// 2024 1학기 STL 화56목56		4월 11일 목요일		(6주 2)
// 
// 4월 25일 (8주 1일) - 중간시험
// 
// STL container - Sequence - vector(dynamic array - [] operator)
//-------------------------------------------------------------------
#include <iostream>
#include <vector>
#include <ranges>
#include "save.h"
#include "String.h"

extern bool 관찰;

//-------------
int main(void)
//-------------
{
	관찰 = true;

	// [문제] 키보드에서 입력한 int 값의 합계와 평균값을 출력하라.
	std::vector<int>v{ std::istream_iterator<int>{std::cin}, { } };

	for (int num : v)
		std::cout << num << '\n';

	save("STL.cpp");
}

=========================================================
STL.cpp:, 2024-04-11 목요일 오후 3:10:21
=========================================================
